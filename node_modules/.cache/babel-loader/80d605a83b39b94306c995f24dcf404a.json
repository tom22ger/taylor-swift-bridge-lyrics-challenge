{"ast":null,"code":"import _slicedToArray from\"/Users/thomasadrian/Development/taylor-swift-bridge-lyrics-challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect,useCallback}from\"react\";import Word from\"./Word\";import style from\"./style.module.css\";import{animateElement}from\"./utilities\";export default function Question(_ref){var song=_ref.song,artist=_ref.artist,givenLyrics=_ref.givenLyrics,missingLyrics=_ref.missingLyrics,activeQuestion=_ref.activeQuestion,index=_ref.index,skip=_ref.skip,solve=_ref.solve,message=_ref.message;var renderedWords=useRef(null);var messageDialogue=useRef(null);var _useState=useState(-1),_useState2=_slicedToArray(_useState,2),activeWord=_useState2[0],setActiveWord=_useState2[1];var toNextWord=useCallback(function(){setActiveWord(activeWord+1);},[activeWord]);useEffect(function(){if(activeQuestion==index){setActiveWord(0);}},[activeQuestion,index]);var missingWords=missingLyrics.split(\" \").map(function(word,i){return/*#__PURE__*/React.createElement(Word,{key:i,index:i,word:word,toNextWord:toNextWord,active:activeWord});});var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),solved=_useState4[0],markSolved=_useState4[1];useEffect(function solveQuestion(){if(!solved&&activeWord===missingWords.length){console.log(\"solved\");markSolved(true);}},[activeWord,missingWords.length,solve,solved]);return/*#__PURE__*/React.createElement(\"div\",{className:style.Question,style:{display:activeQuestion==index?\"inline-block\":\"none\"}},/*#__PURE__*/React.createElement(\"div\",{className:style[\"song-info\"]},/*#__PURE__*/React.createElement(\"p\",{className:\"song-info-scrolling\"},song,\" - \",artist)),/*#__PURE__*/React.createElement(\"div\",{className:style[\"given-lyrics\"]},givenLyrics),/*#__PURE__*/React.createElement(\"div\",{ref:renderedWords,className:style[\"missing-lyrics\"]},missingWords),/*#__PURE__*/React.createElement(\"div\",{className:style[\"next-buttons\"]},/*#__PURE__*/React.createElement(\"button\",{className:style[\"skip-button\"],style:{display:solved?\"none\":\"block\"},onClick:skip},\"GIVE UP\"),/*#__PURE__*/React.createElement(\"div\",{className:[style[\"next-button-container\"],solved?\"animate-next-button\":\"\"].join(\" \")},/*#__PURE__*/React.createElement(\"button\",{className:style[\"next-button\"],onClick:solve},\"NEXT\"),/*#__PURE__*/React.createElement(\"img\",{src:require(\"./assets/note.svg\"),alt:\"\",className:\"note\"}),/*#__PURE__*/React.createElement(\"img\",{src:require(\"./assets/doublenote.svg\"),alt:\"\",className:\"doublenote\"}))));}","map":{"version":3,"sources":["/Users/thomasadrian/Development/taylor-swift-bridge-lyrics-challenge/src/Question.jsx"],"names":["React","useState","useRef","useEffect","useCallback","Word","style","animateElement","Question","song","artist","givenLyrics","missingLyrics","activeQuestion","index","skip","solve","message","renderedWords","messageDialogue","activeWord","setActiveWord","toNextWord","missingWords","split","map","word","i","solved","markSolved","solveQuestion","length","console","log","display","join","require"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport Word from \"./Word\";\nimport style from \"./style.module.css\";\n\nimport { animateElement } from \"./utilities\";\n\nexport default function Question({\n  song,\n  artist,\n  givenLyrics,\n  missingLyrics,\n  activeQuestion,\n  index,\n  skip,\n  solve,\n  message,\n}) {\n  const renderedWords = useRef(null);\n  const messageDialogue = useRef(null);\n\n  const [activeWord, setActiveWord] = useState(-1);\n  const toNextWord = useCallback(() => {\n    setActiveWord(activeWord + 1);\n  }, [activeWord]);\n\n  useEffect(() => {\n    if (activeQuestion == index) {\n      setActiveWord(0);\n    }\n  }, [activeQuestion, index]);\n\n  const missingWords = missingLyrics\n    .split(\" \")\n    .map((word, i) => (\n      <Word\n        key={i}\n        index={i}\n        word={word}\n        toNextWord={toNextWord}\n        active={activeWord}\n      ></Word>\n    ));\n\n  const [solved, markSolved] = useState(false);\n  useEffect(\n    function solveQuestion() {\n      if (!solved && activeWord === missingWords.length) {\n        console.log(\"solved\");\n        markSolved(true);\n      }\n    },\n    [activeWord, missingWords.length, solve, solved]\n  );\n\n  return (\n    <div\n      className={style.Question}\n      style={{ display: activeQuestion == index ? \"inline-block\" : \"none\" }}\n    >\n      <div className={style[\"song-info\"]}>\n        <p className=\"song-info-scrolling\">\n          {song} - {artist}\n        </p>\n      </div>\n      <div className={style[\"given-lyrics\"]}>{givenLyrics}</div>\n      <div ref={renderedWords} className={style[\"missing-lyrics\"]}>\n        {missingWords}\n      </div>\n      <div className={style[\"next-buttons\"]}>\n        <button\n          className={style[\"skip-button\"]}\n          style={{ display: solved ? \"none\" : \"block\" }}\n          onClick={skip}\n        >\n          GIVE UP\n        </button>\n        <div\n          className={[\n            style[\"next-button-container\"],\n            solved ? \"animate-next-button\" : \"\",\n          ].join(\" \")}\n        >\n          <button className={style[\"next-button\"]} onClick={solve}>\n            NEXT\n          </button>\n          <img src={require(\"./assets/note.svg\")} alt=\"\" className=\"note\" />\n          <img\n            src={require(\"./assets/doublenote.svg\")}\n            alt=\"\"\n            className=\"doublenote\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}