{"ast":null,"code":"var _jsxFileName = \"/Users/thomasadrian/Development/bridge-challenge/src/Word.jsx\";\nimport React, { useState, useEffect } from \"react\";\nexport default function Word({\n  word,\n  toNextWord\n}) {\n  const [solved, setSolved] = useState(false);\n\n  function isSameWord(w1, w2) {\n    return w1.toLowerCase().replace(/[^a-zA-Z ]/g, \"\") === w2.toLowerCase().replace(/[^a-zA-Z ]/g, \"\");\n  }\n\n  const [guess, setGuess] = useState(\"\");\n  useEffect(function checkWords() {\n    console.log(guess);\n\n    if (isSameWord(guess, word)) {\n      setSolved(true);\n      toNextWord();\n    } else {}\n  }, [guess, word]);\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: solved,\n    onChange: event => setGuess(event.target.value),\n    value: guess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/thomasadrian/Development/bridge-challenge/src/Word.jsx"],"names":["React","useState","useEffect","Word","word","toNextWord","solved","setSolved","isSameWord","w1","w2","toLowerCase","replace","guess","setGuess","checkWords","console","log","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,EAAoC;AACjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASO,UAAT,CAAoBC,EAApB,EAAwBC,EAAxB,EAA4B;AAC1B,WACED,EAAE,CAACE,WAAH,GAAiBC,OAAjB,CAAyB,aAAzB,EAAwC,EAAxC,MACAF,EAAE,CAACC,WAAH,GAAiBC,OAAjB,CAAyB,aAAzB,EAAwC,EAAxC,CAFF;AAID;;AAED,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CACP,SAASa,UAAT,GAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,QAAIL,UAAU,CAACK,KAAD,EAAQT,IAAR,CAAd,EAA6B;AAC3BG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,MAAAA,UAAU;AACX,KAHD,MAGO,CACN;AACF,GARM,EASP,CAACQ,KAAD,EAAQT,IAAR,CATO,CAAT;AAYA,sBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEE,MAFZ;AAGE,IAAA,QAAQ,EAAGY,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH/B;AAIE,IAAA,KAAK,EAAEP,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Word({ word, toNextWord }) {\n  const [solved, setSolved] = useState(false);\n\n  function isSameWord(w1, w2) {\n    return (\n      w1.toLowerCase().replace(/[^a-zA-Z ]/g, \"\") ===\n      w2.toLowerCase().replace(/[^a-zA-Z ]/g, \"\")\n    );\n  }\n\n  const [guess, setGuess] = useState(\"\");\n  useEffect(\n    function checkWords() {\n      console.log(guess);\n      if (isSameWord(guess, word)) {\n        setSolved(true);\n        toNextWord();\n      } else {\n      }\n    },\n    [guess, word]\n  );\n\n  return (\n    <input\n      type=\"text\"\n      disabled={solved}\n      onChange={(event) => setGuess(event.target.value)}\n      value={guess}\n    ></input>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}