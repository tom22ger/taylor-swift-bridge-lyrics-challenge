{"ast":null,"code":"var _jsxFileName = \"/Users/thomasadrian/Development/bridge-challenge/src/Word.jsx\";\nimport React, { useState, useEffect } from \"react\";\nexport default function Word({\n  word,\n  toNextWord,\n  active\n}) {\n  const [guess, setGuess] = useState(\"\");\n  useEffect(function checkWords() {\n    console.log(guess);\n\n    if (guess.toLowerCase().replace(/[^a-zA-Z ]/g, \"\") === word.toLowerCase().replace(/[^a-zA-Z ]/g, \"\")) {\n      setSolved(true);\n      toNextWord();\n    } else {}\n  }, [guess, word]);\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: active,\n    onChange: event => setGuess(event.target.value),\n    value: guess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/thomasadrian/Development/bridge-challenge/src/Word.jsx"],"names":["React","useState","useEffect","Word","word","toNextWord","active","guess","setGuess","checkWords","console","log","toLowerCase","replace","setSolved","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAd,EAA4C;AACzD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CACP,SAASO,UAAT,GAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,QACEA,KAAK,CAACK,WAAN,GAAoBC,OAApB,CAA4B,aAA5B,EAA2C,EAA3C,MACAT,IAAI,CAACQ,WAAL,GAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAFF,EAGE;AACAC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAT,MAAAA,UAAU;AACX,KAND,MAMO,CACN;AACF,GAXM,EAYP,CAACE,KAAD,EAAQH,IAAR,CAZO,CAAT;AAeA,sBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEE,MAFZ;AAGE,IAAA,QAAQ,EAAGS,KAAD,IAAWP,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH/B;AAIE,IAAA,KAAK,EAAEV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Word({ word, toNextWord, active }) {\n  const [guess, setGuess] = useState(\"\");\n  useEffect(\n    function checkWords() {\n      console.log(guess);\n      if (\n        guess.toLowerCase().replace(/[^a-zA-Z ]/g, \"\") ===\n        word.toLowerCase().replace(/[^a-zA-Z ]/g, \"\")\n      ) {\n        setSolved(true);\n        toNextWord();\n      } else {\n      }\n    },\n    [guess, word]\n  );\n\n  return (\n    <input\n      type=\"text\"\n      disabled={active}\n      onChange={(event) => setGuess(event.target.value)}\n      value={guess}\n    ></input>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}