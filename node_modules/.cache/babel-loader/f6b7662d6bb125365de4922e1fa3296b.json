{"ast":null,"code":"var _jsxFileName = \"/Users/thomasadrian/Development/bridge-challenge/src/Question.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport Word from \"./Word\";\nexport default function Question(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n  const [missingWords, setMissingWords] = useState([]);\n  const [activeWord, setActiveWord] = useState(null);\n\n  function nextWord() {\n    let activeWord = document.activeElement;\n  }\n\n  function parseWords(sentence) {\n    let words = sentence.split(\" \");\n    let renderedWords = [];\n\n    for (let i in words) {\n      renderedWords.push( /*#__PURE__*/React.createElement(Word, {\n        key: i,\n        word: words[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 26\n        }\n      }));\n    }\n\n    return renderedWords;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.givenLyrics), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, parseWords(props.missingLyrics)));\n}","map":{"version":3,"sources":["/Users/thomasadrian/Development/bridge-challenge/src/Question.jsx"],"names":["React","useState","useRef","Word","Question","props","count","setCount","missingWords","setMissingWords","activeWord","setActiveWord","nextWord","document","activeElement","parseWords","sentence","words","split","renderedWords","i","push","givenLyrics","missingLyrics"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;;AAEA,WAASW,QAAT,GAAoB;AAClB,QAAIF,UAAU,GAAGG,QAAQ,CAACC,aAA1B;AACD;;AAED,WAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,QAAIC,KAAK,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAZ;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAT,IAAcH,KAAd,EAAqB;AACnBE,MAAAA,aAAa,CAACE,IAAd,eAAmB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAED,CAAX;AAAc,QAAA,IAAI,EAAEH,KAAK,CAACG,CAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AACD;;AACD,WAAOD,aAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMd,KAAK,CAACiB,WAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,UAAU,CAACV,KAAK,CAACkB,aAAP,CAAhB,CAFF,CADF;AAMD","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Word from \"./Word\";\n\nexport default function Question(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n  const [missingWords, setMissingWords] = useState([]);\n  const [activeWord, setActiveWord] = useState(null);\n\n  function nextWord() {\n    let activeWord = document.activeElement;\n  }\n\n  function parseWords(sentence) {\n    let words = sentence.split(\" \");\n    let renderedWords = [];\n    for (let i in words) {\n      renderedWords.push(<Word key={i} word={words[i]}></Word>);\n    }\n    return renderedWords;\n  }\n\n  return (\n    <div>\n      <div>{props.givenLyrics}</div>\n      <div>{parseWords(props.missingLyrics)}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}