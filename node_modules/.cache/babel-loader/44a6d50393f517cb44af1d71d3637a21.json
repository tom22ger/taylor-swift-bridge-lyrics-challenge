{"ast":null,"code":"var _jsxFileName = \"/Users/thomasadrian/Development/bridge-challenge/src/Quiz.jsx\";\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from \"react\";\nimport Question from \"./Question\";\nimport data from \"./data.json\";\nexport default function Quiz({\n  questions\n}) {\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  function skipQuestion() {\n    setActiveQuestion(activeQuestion + 1);\n  }\n\n  const solveQuestion = useCallback(() => {\n    setScore(score + 1);\n    setActiveQuestion(activeQuestion + 1);\n  }, [score, activeQuestion]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, data.map((props, i) => /*#__PURE__*/React.createElement(Question, Object.assign({}, props, {\n    activeQuestion: activeQuestion,\n    index: i,\n    key: i //skip={skipQuestion}\n    ,\n    solve: solveQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/thomasadrian/Development/bridge-challenge/src/Quiz.jsx"],"names":["React","useState","useRef","useEffect","useCallback","useMemo","Question","data","Quiz","questions","activeQuestion","setActiveQuestion","score","setScore","skipQuestion","solveQuestion","map","props","i"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,OALF,QAMO,OANP;AAOA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA6B;AAC1C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,WAASa,YAAT,GAAwB;AACtBH,IAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACD;;AAED,QAAMK,aAAa,GAAGX,WAAW,CAAC,MAAM;AACtCS,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAD,IAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACD,GAHgC,EAG9B,CAACE,KAAD,EAAQF,cAAR,CAH8B,CAAjC;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACS,GAAL,CAAS,CAACC,KAAD,EAAQC,CAAR,kBACR,oBAAC,QAAD,oBACMD,KADN;AAEE,IAAA,cAAc,EAAEP,cAFlB;AAGE,IAAA,KAAK,EAAEQ,CAHT;AAIE,IAAA,GAAG,EAAEA,CAJP,CAKE;AALF;AAME,IAAA,KAAK,EAAEH,aANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADF,CADF;AAgBD","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport Question from \"./Question\";\nimport data from \"./data.json\";\n\nexport default function Quiz({ questions }) {\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  function skipQuestion() {\n    setActiveQuestion(activeQuestion + 1);\n  }\n\n  const solveQuestion = useCallback(() => {\n    setScore(score + 1);\n    setActiveQuestion(activeQuestion + 1);\n  }, [score, activeQuestion]);\n\n  return (\n    <div>\n      <div>\n        {data.map((props, i) => (\n          <Question\n            {...props}\n            activeQuestion={activeQuestion}\n            index={i}\n            key={i}\n            //skip={skipQuestion}\n            solve={solveQuestion}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}